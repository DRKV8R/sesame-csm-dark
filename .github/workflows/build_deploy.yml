# This name appears in the "Actions" tab of your GitHub repository.
name: Build and Push Voice and Video Workers

# This workflow runs automatically on a push to the 'main' branch.
on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab.

jobs:
  # --- JOB 1: Build the Voice Worker ---
  build_voice_worker:
    runs-on: ubuntu-latest # Use a standard Linux runner.
    steps:
      # Step 1: Download your repository code onto the runner.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx for advanced building features.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub using secure secrets.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # This securely pulls your username from GitHub Secrets.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # This securely pulls your access token from GitHub Secrets.
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build the voice_worker image and push it to Docker Hub.
      - name: Build and push voice_worker
        uses: docker/build-push-action@v5
        with:
          # Tells the builder where the code for this service is located.
          context: ./voice_worker
          # Specifies the exact Dockerfile to use.
          file: ./voice_worker/Dockerfile
          # Tells the builder to push the image to Docker Hub after building.
          push: true
          # Tags the image with your Docker Hub username and gives it a name.
          # Example tag: icloudv8dr/voice-worker:latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/voice-worker:latest
          # Use build cache to speed up future builds.
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # --- JOB 2: Build the Video Worker ---
  build_video_worker:
    runs-on: ubuntu-latest # This job runs in parallel with the voice worker job.
    steps:
      # Steps 1-3 are identical to the voice worker job.
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build the video_worker image and push it to Docker Hub.
      - name: Build and push video_worker
        uses: docker/build-push-action@v5
        with:
          # The context and file paths are now pointing to the video_worker directory.
          context: ./video_worker
          file: ./video_worker/Dockerfile
          push: true
          # Example tag: icloudv8dr/video-worker:latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/video-worker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
