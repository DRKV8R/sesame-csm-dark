# --- SUPER DEBUG Dockerfile for Voice Generation Service ---
# This version uses maximum verbosity to find the exact dependency conflict.

FROM runpod/pytorch:2.2.1-py3.10-cuda12.1.1-devel-ubuntu22.04
WORKDIR /app

# ---- 1. Install System Dependencies ----
RUN apt-get update && apt-get install -y \
    ffmpeg sox libsox-fmt-all git \
    && rm -rf /var/lib/apt/lists/* && apt-get clean

# ---- 2. Set Environment Variables ----
ENV NO_TORCH_COMPILE=1
ENV PYTHONPATH=/app:/app/csm_repo
ENV VOICE_MODEL_REPO=sesame/csm-1b
ENV FFMPEG_BINARY=/usr/bin/ffmpeg
ENV TORCHAUDIO_BACKEND=ffmpeg
ENV HF_HOME=/workspace/hf_cache

# ---- 3. Clone CSM Repo First ----
RUN git clone https://github.com/SesameAILabs/csm.git csm_repo

# ---- 4. Install Dependencies Separately for MAXIMUM Debug Output ----
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip

# --- DEBUG STEP 1: Install from your requirements.txt first. ---
RUN echo "--- Installing packages from requirements.txt with verbose logging ---" && \
    pip install --no-cache-dir -vvv -r requirements.txt && \
    echo "--- Successfully installed packages from requirements.txt ---"

# --- DEBUG STEP 2: Install the CSM repo. ---
# This is the step we expect to FAIL. The verbose log will tell us exactly which package is causing the conflict.
RUN echo "--- Installing csm_repo with verbose logging ---" && \
    pip install --no-cache-dir -vvv -e ./csm_repo && \
    echo "--- Successfully installed csm_repo ---"

# ---- 5. The rest of the file (will not be reached) ----
RUN python -c "from generator import load_csm_1b; print('CSM import successful')"
COPY handler.py ./handler.py
RUN mkdir -p /workspace/voice_loras /workspace/hf_cache && \
    useradd -m -u 1000 -s /bin/bash runpod && \
    chown -R runpod:runpod /app /workspace
USER runpod
CMD ["python", "-u", "handler.py"]
